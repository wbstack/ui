name: Docker build

on:
  #push:
   # branches:
    #  - 'main'
    #tags:
     # - '*'
  pull_request:
jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3.0.2
      -
        name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v4.0.1
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2.0.0
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.0.0
      -
        name: Cache Docker layers
        uses: actions/cache@v3.2.0
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2.0.0
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3.1.1
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
      #Staging: Create pull request on deploy repo from a merged PR
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - run: pip install -r ./scripts/requirements.txt
      -
        name: create pull request for deploy on staging
        uses: actions/checkout@v3
        with:
          repository: wmde/wbaas-deploy
          path: wbaas-deploy
      # Make changes to pull request here
      - run: |
          export GET_TAG="$(echo ${{ steps.docker_meta.outputs.tags }} | cut -d':' -f2)"
          ./scripts/update-yaml-doc.py \
            -f ./../k8s/helmfile/env/local/ui.values.yaml.gotmpl \
            -v "$GET_TAG" \
            -p "image.tag"
          ./scripts/update-yaml-doc.py \
            -f ./../k8s/helmfile/env/staging/ui.values.yaml.gotmpl \
            -v "$GET_TAG" \
            -p "image.tag"
      - uses: peter-evans/create-pull-request@v4
        with:
          path: wbaas-deploy
          commit-message: 'Staging+Local: Deploy new UI image ${{ steps.docker_meta.outputs.tags }}'
          title: 'Staging+Local: Deploy new UI image ${{ steps.docker_meta.outputs.tags }}'
          branch: deploy-to-staging-$GITHUB_RUN_ID
          committer: wmdebot <github-bots@wikimedia.de>
          author: ${{ github.actor }} <github-bots@wikimedia.de>
          labels: automated pr
          token: ${{ secrets.WBAAS_DEPLOY_TOKEN }}
      #Production: Create pull request on deploy repo from a merged PR
#      - name: create pull request for deploy on production
#        uses: actions/checkout@v3
#        with:
#          repository: wmde/wbaas-deploy
#      # Make changes to pull request here
#      -  run: |
#          python - <<EOF
#          from ruamel.yaml import YAML
#          import sys

#          yaml=YAML()
#          with open("k8s/helmfile/env/production/ui.values.yaml.gotmpl") as doc:
#              data=yaml.load(doc)
#          data['image']['tag']="sha-"+$GITHUB_SHA[:7]
#          with open("k8s/helmfile/env/production/ui.values.yaml.gotmpl", 'w') as doc:
#              yaml.dump(data, doc)
#          EOF
#      - uses: peter-evans/create-pull-request@v4
#        with:
#          commit-message: 'Production: Deploy new UI image ${{ steps.docker_meta.outputs.tags }}'
#          title: 'Production: Deploy new UI image ${{ steps.docker_meta.outputs.tags }}'
#          branch: deploy-to-production-$GITHUB_RUN_ID
#          committer: wmdebot <github-bots@wikimedia.de>
#          author: ${{ github.actor }} <github-bots@wikimedia.de>
#          labels: automated pr
#          token: ${{ secrets.WBAAS_DEPLOY_TOKEN }}
