name: Docker build

on:
  push:
    branches:
    - main
jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3.5.3
      -
        name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v4.6.0
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2.2.0
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.9.1
      -
        name: Cache Docker layers
        uses: actions/cache@v3.3.1
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4.1.1
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          push: true
      -
        name: Check out `wmde/wbaas-deploy` repository in staging child directory
        uses: actions/checkout@v3.5.3
        with:
          repository: wmde/wbaas-deploy
          path: ./repos/wbaas-deploy-staging
      -
        name: Check out `wmde/wbaas-deploy` repository in production child directory
        uses: actions/checkout@v3.5.3
        with:
          repository: wmde/wbaas-deploy
          path: ./repos/wbaas-deploy-production
      - name: Create helmfile docker shim
        run: |
          docker pull ghcr.io/helmfile/helmfile:latest
          echo 'docker run \
            --rm \
            --volume "${TMP_DIR}:${TMP_DIR}" \
            --volume "${PWD}:/workdir" \
            --workdir /workdir \
            --user $(id -u):$(id -g) \
            ghcr.io/helmfile/helmfile:latest helmfile $*' \
            | tee ~/.local/bin/helmfile
          chmod +x ~/.local/bin/helmfile
      - name: Create yq docker shim
        run: |
          docker pull mikefarah/yq:latest
          echo 'docker run \
            --rm \
            --volume "${TMP_DIR}:${TMP_DIR}" \
            --volume "${PWD}:/workdir" \
            --workdir /workdir \
            --user $(id -u):$(id -g) \
            mikefarah/yq:latest $*' \
            | tee ~/.local/bin/yq
          chmod +x ~/.local/bin/yq
          
      - 
        name: Update helmfile values for local, staging and production
        id: update-helmfile-values
        run: |
          TAG="$(echo ${{ steps.docker_meta.outputs.tags }} | cut -d':' -f2)"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          sed -i "/image:/{n;s/tag:.*/tag: $TAG/;}" ./repos/wbaas-deploy-staging/k8s/helmfile/env/local/ui.values.yaml.gotmpl
          sed -i "/image:/{n;s/tag:.*/tag: $TAG/;}" ./repos/wbaas-deploy-staging/k8s/helmfile/env/staging/ui.values.yaml.gotmpl
          sed -i "/image:/{n;s/tag:.*/tag: $TAG/;}" ./repos/wbaas-deploy-production/k8s/helmfile/env/production/ui.values.yaml.gotmpl
          # run the values script for local, prod and staging
      -
        name: Update argo values for local, staging and production
        id: update-argo-values
        run: |
          # run generate values script for local from staging folder
          ./repos/wbaas-deploy-staging/bin/generate-values.sh local ui
          # run generate values script for staging from staging folder
          ./repos/wbaas-deploy-staging/bin/generate-values.sh staging ui
          # run generate values script for prod from prod folder
          ./repos/wbaas-deploy-production/bin/generate-values.sh production ui
      -
        name: Truncate commit message
        id: truncate-commit-message
        run: |
          MSG=$(git log -1 --pretty=format:%s)
          echo "msg=$MSG" >> $GITHUB_OUTPUT
      -
        uses: peter-evans/create-pull-request@v5
        with:
          path: ./repos/wbaas-deploy-staging
          commit-message: 'Staging+Local: Deploy new UI image ${{ steps.docker_meta.outputs.tags }}'
          title: 'Staging+Local: Deploy new UI image ${{ steps.docker_meta.outputs.tags }}'
          branch: deploy-to-staging-${{ steps.update-values.outputs.tag }}
          committer: wmdebot <github-bots@wikimedia.de>
          author: ${{ github.actor }} <github-bots@wikimedia.de>
          labels: automated pr
          token: ${{ secrets.WBAAS_DEPLOY_TOKEN }}
          body: |
            This is an automated update for the `ui` image in staging and local, using `${{ steps.update-values.outputs.tag }}`.

            **Changes**: [${{ steps.truncate-commit-message.outputs.msg }}](https://github.com/wbstack/ui/commit/${{ github.sha }})
      -
        uses: peter-evans/create-pull-request@v5
        with:
          path: ./repos/wbaas-deploy-production
          commit-message: 'Production: Deploy new UI image ${{ steps.docker_meta.outputs.tags }}'
          title: 'Production: Deploy new UI image ${{ steps.docker_meta.outputs.tags }}'
          branch: deploy-to-production-${{ steps.update-values.outputs.tag }}
          committer: wmdebot <github-bots@wikimedia.de>
          author: ${{ github.actor }} <github-bots@wikimedia.de>
          labels: automated pr
          token: ${{ secrets.WBAAS_DEPLOY_TOKEN }}
          body: |
            This is an automated update for the `ui` image in production, using `${{ steps.update-values.outputs.tag }}`.

            **Changes**: [${{ steps.truncate-commit-message.outputs.msg }}](https://github.com/wbstack/ui/commit/${{ github.sha }})
